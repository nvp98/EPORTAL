//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPORTAL.ModelsOrganizational
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SoDoToChucEntities : DbContext
    {
        public SoDoToChucEntities()
            : base("name=SoDoToChucEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ca> Cas { get; set; }
        public virtual DbSet<CapBac> CapBacs { get; set; }
        public virtual DbSet<ChucVu> ChucVus { get; set; }
        public virtual DbSet<LoaiKH> LoaiKHs { get; set; }
        public virtual DbSet<MaViTri> MaViTris { get; set; }
        public virtual DbSet<NhanVienAPI> NhanVienAPIs { get; set; }
        public virtual DbSet<NhanVienPVSX> NhanVienPVSXes { get; set; }
        public virtual DbSet<Nhom> Nhoms { get; set; }
        public virtual DbSet<NhomLV> NhomLVs { get; set; }
        public virtual DbSet<PhanXuong> PhanXuongs { get; set; }
        public virtual DbSet<PhongBan> PhongBans { get; set; }
        public virtual DbSet<QuyenDangNhap> QuyenDangNhaps { get; set; }
        //public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<ToLV> ToLVs { get; set; }
        public virtual DbSet<ViTri> ViTris { get; set; }
        public virtual DbSet<ViTriLViec> ViTriLViecs { get; set; }
    
        public virtual int DangKy_delete(Nullable<int> iDDK)
        {
            var iDDKParameter = iDDK.HasValue ?
                new ObjectParameter("IDDK", iDDK) :
                new ObjectParameter("IDDK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DangKy_delete", iDDKParameter);
        }
    
        public virtual int DangKy_insert(string tenDangNhap, string matKhau, string maNV, string hoTen, string email, Nullable<int> maQuyen, Nullable<int> iDPhongBan)
        {
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("TenDangNhap", tenDangNhap) :
                new ObjectParameter("TenDangNhap", typeof(string));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("MatKhau", matKhau) :
                new ObjectParameter("MatKhau", typeof(string));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var maQuyenParameter = maQuyen.HasValue ?
                new ObjectParameter("MaQuyen", maQuyen) :
                new ObjectParameter("MaQuyen", typeof(int));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DangKy_insert", tenDangNhapParameter, matKhauParameter, maNVParameter, hoTenParameter, emailParameter, maQuyenParameter, iDPhongBanParameter);
        }
    
        public virtual int DangKy_ResetPass(Nullable<int> iDDK, string tenDangNhap, string matKhau)
        {
            var iDDKParameter = iDDK.HasValue ?
                new ObjectParameter("IDDK", iDDK) :
                new ObjectParameter("IDDK", typeof(int));
    
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("TenDangNhap", tenDangNhap) :
                new ObjectParameter("TenDangNhap", typeof(string));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("MatKhau", matKhau) :
                new ObjectParameter("MatKhau", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DangKy_ResetPass", iDDKParameter, tenDangNhapParameter, matKhauParameter);
        }
    
        public virtual int DangKy_update(Nullable<int> iDDK, string tenDangNhap, string maNV, string hoTen, string email, Nullable<int> maQuyen, Nullable<int> iDPhongBan)
        {
            var iDDKParameter = iDDK.HasValue ?
                new ObjectParameter("IDDK", iDDK) :
                new ObjectParameter("IDDK", typeof(int));
    
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("TenDangNhap", tenDangNhap) :
                new ObjectParameter("TenDangNhap", typeof(string));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var maQuyenParameter = maQuyen.HasValue ?
                new ObjectParameter("MaQuyen", maQuyen) :
                new ObjectParameter("MaQuyen", typeof(int));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DangKy_update", iDDKParameter, tenDangNhapParameter, maNVParameter, hoTenParameter, emailParameter, maQuyenParameter, iDPhongBanParameter);
        }
    
        public virtual int HanhChinhNM_delete(Nullable<int> iDNSHC)
        {
            var iDNSHCParameter = iDNSHC.HasValue ?
                new ObjectParameter("IDNSHC", iDNSHC) :
                new ObjectParameter("IDNSHC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HanhChinhNM_delete", iDNSHCParameter);
        }
    
        public virtual int HanhChinhNM_insert(Nullable<int> iDPhongBan, Nullable<int> tPHC, Nullable<int> qDHC, Nullable<int> pTHC, Nullable<int> kTVHC, Nullable<int> nVHC)
        {
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tPHCParameter = tPHC.HasValue ?
                new ObjectParameter("TPHC", tPHC) :
                new ObjectParameter("TPHC", typeof(int));
    
            var qDHCParameter = qDHC.HasValue ?
                new ObjectParameter("QDHC", qDHC) :
                new ObjectParameter("QDHC", typeof(int));
    
            var pTHCParameter = pTHC.HasValue ?
                new ObjectParameter("PTHC", pTHC) :
                new ObjectParameter("PTHC", typeof(int));
    
            var kTVHCParameter = kTVHC.HasValue ?
                new ObjectParameter("KTVHC", kTVHC) :
                new ObjectParameter("KTVHC", typeof(int));
    
            var nVHCParameter = nVHC.HasValue ?
                new ObjectParameter("NVHC", nVHC) :
                new ObjectParameter("NVHC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HanhChinhNM_insert", iDPhongBanParameter, tPHCParameter, qDHCParameter, pTHCParameter, kTVHCParameter, nVHCParameter);
        }
    
        public virtual int HanhChinhNM_update(Nullable<int> iDNSHC, Nullable<int> iDPhongBan, Nullable<int> tPHC, Nullable<int> qDHC, Nullable<int> pTHC, Nullable<int> kTVHC, Nullable<int> nVHC)
        {
            var iDNSHCParameter = iDNSHC.HasValue ?
                new ObjectParameter("IDNSHC", iDNSHC) :
                new ObjectParameter("IDNSHC", typeof(int));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tPHCParameter = tPHC.HasValue ?
                new ObjectParameter("TPHC", tPHC) :
                new ObjectParameter("TPHC", typeof(int));
    
            var qDHCParameter = qDHC.HasValue ?
                new ObjectParameter("QDHC", qDHC) :
                new ObjectParameter("QDHC", typeof(int));
    
            var pTHCParameter = pTHC.HasValue ?
                new ObjectParameter("PTHC", pTHC) :
                new ObjectParameter("PTHC", typeof(int));
    
            var kTVHCParameter = kTVHC.HasValue ?
                new ObjectParameter("KTVHC", kTVHC) :
                new ObjectParameter("KTVHC", typeof(int));
    
            var nVHCParameter = nVHC.HasValue ?
                new ObjectParameter("NVHC", nVHC) :
                new ObjectParameter("NVHC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HanhChinhNM_update", iDNSHCParameter, iDPhongBanParameter, tPHCParameter, qDHCParameter, pTHCParameter, kTVHCParameter, nVHCParameter);
        }
    
        public virtual int LoaiKH_insert_Excel(string tenLoaiKH)
        {
            var tenLoaiKHParameter = tenLoaiKH != null ?
                new ObjectParameter("TenLoaiKH", tenLoaiKH) :
                new ObjectParameter("TenLoaiKH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoaiKH_insert_Excel", tenLoaiKHParameter);
        }
    
        public virtual int LoaiKH_update_Excel(Nullable<int> iDLoai, string tenLoaiKH)
        {
            var iDLoaiParameter = iDLoai.HasValue ?
                new ObjectParameter("IDLoai", iDLoai) :
                new ObjectParameter("IDLoai", typeof(int));
    
            var tenLoaiKHParameter = tenLoaiKH != null ?
                new ObjectParameter("TenLoaiKH", tenLoaiKH) :
                new ObjectParameter("TenLoaiKH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoaiKH_update_Excel", iDLoaiParameter, tenLoaiKHParameter);
        }
    
        public virtual int MaViTri_insert_Excel(string tenMaViTri, Nullable<int> iDLoai)
        {
            var tenMaViTriParameter = tenMaViTri != null ?
                new ObjectParameter("TenMaViTri", tenMaViTri) :
                new ObjectParameter("TenMaViTri", typeof(string));
    
            var iDLoaiParameter = iDLoai.HasValue ?
                new ObjectParameter("IDLoai", iDLoai) :
                new ObjectParameter("IDLoai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaViTri_insert_Excel", tenMaViTriParameter, iDLoaiParameter);
        }
    
        public virtual int MaViTri_update_Excel(Nullable<int> iDMaViTri, string tenMaViTri, Nullable<int> iDLoai)
        {
            var iDMaViTriParameter = iDMaViTri.HasValue ?
                new ObjectParameter("IDMaViTri", iDMaViTri) :
                new ObjectParameter("IDMaViTri", typeof(int));
    
            var tenMaViTriParameter = tenMaViTri != null ?
                new ObjectParameter("TenMaViTri", tenMaViTri) :
                new ObjectParameter("TenMaViTri", typeof(string));
    
            var iDLoaiParameter = iDLoai.HasValue ?
                new ObjectParameter("IDLoai", iDLoai) :
                new ObjectParameter("IDLoai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaViTri_update_Excel", iDMaViTriParameter, tenMaViTriParameter, iDLoaiParameter);
        }
    
        public virtual int NhanSuCa_delete(Nullable<int> iDCa)
        {
            var iDCaParameter = iDCa.HasValue ?
                new ObjectParameter("IDCa", iDCa) :
                new ObjectParameter("IDCa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanSuCa_delete", iDCaParameter);
        }
    
        public virtual int NhanSuCa_insert(Nullable<int> iDPhongBan, Nullable<int> pTCa, Nullable<int> kTVCa, Nullable<int> nVCa)
        {
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var pTCaParameter = pTCa.HasValue ?
                new ObjectParameter("PTCa", pTCa) :
                new ObjectParameter("PTCa", typeof(int));
    
            var kTVCaParameter = kTVCa.HasValue ?
                new ObjectParameter("KTVCa", kTVCa) :
                new ObjectParameter("KTVCa", typeof(int));
    
            var nVCaParameter = nVCa.HasValue ?
                new ObjectParameter("NVCa", nVCa) :
                new ObjectParameter("NVCa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanSuCa_insert", iDPhongBanParameter, pTCaParameter, kTVCaParameter, nVCaParameter);
        }
    
        public virtual int NhanSuCa_update(Nullable<int> iDCa, Nullable<int> iDPhongBan, Nullable<int> pTCa, Nullable<int> kTVCa, Nullable<int> nVCa)
        {
            var iDCaParameter = iDCa.HasValue ?
                new ObjectParameter("IDCa", iDCa) :
                new ObjectParameter("IDCa", typeof(int));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var pTCaParameter = pTCa.HasValue ?
                new ObjectParameter("PTCa", pTCa) :
                new ObjectParameter("PTCa", typeof(int));
    
            var kTVCaParameter = kTVCa.HasValue ?
                new ObjectParameter("KTVCa", kTVCa) :
                new ObjectParameter("KTVCa", typeof(int));
    
            var nVCaParameter = nVCa.HasValue ?
                new ObjectParameter("NVCa", nVCa) :
                new ObjectParameter("NVCa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanSuCa_update", iDCaParameter, iDPhongBanParameter, pTCaParameter, kTVCaParameter, nVCaParameter);
        }
    
        public virtual int NhanVien_delete(Nullable<int> iDNV)
        {
            var iDNVParameter = iDNV.HasValue ?
                new ObjectParameter("IDNV", iDNV) :
                new ObjectParameter("IDNV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVien_delete", iDNVParameter);
        }
    
        public virtual int NhanVien_insert(string maNV, string hoTen, Nullable<System.DateTime> ngaySinh, string diaChi, string email, string dienThoai, Nullable<int> iDPhongBan, Nullable<int> phanXuongID, Nullable<int> chucVuID, Nullable<int> capBac, string imagePath)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var ngaySinhParameter = ngaySinh.HasValue ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(System.DateTime));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var dienThoaiParameter = dienThoai != null ?
                new ObjectParameter("DienThoai", dienThoai) :
                new ObjectParameter("DienThoai", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var phanXuongIDParameter = phanXuongID.HasValue ?
                new ObjectParameter("PhanXuongID", phanXuongID) :
                new ObjectParameter("PhanXuongID", typeof(int));
    
            var chucVuIDParameter = chucVuID.HasValue ?
                new ObjectParameter("ChucVuID", chucVuID) :
                new ObjectParameter("ChucVuID", typeof(int));
    
            var capBacParameter = capBac.HasValue ?
                new ObjectParameter("CapBac", capBac) :
                new ObjectParameter("CapBac", typeof(int));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVien_insert", maNVParameter, hoTenParameter, ngaySinhParameter, diaChiParameter, emailParameter, dienThoaiParameter, iDPhongBanParameter, phanXuongIDParameter, chucVuIDParameter, capBacParameter, imagePathParameter);
        }
    
        public virtual int NhanVien_insert_API(string maNV, string hoten, Nullable<System.DateTime> ngaySinh, string diaChi, string dienThoai, Nullable<System.DateTime> ngayVaoLam, Nullable<int> iDPhongBan, Nullable<int> iDTinhTrangLV, Nullable<int> iDViTri, string cMND)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hotenParameter = hoten != null ?
                new ObjectParameter("Hoten", hoten) :
                new ObjectParameter("Hoten", typeof(string));
    
            var ngaySinhParameter = ngaySinh.HasValue ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(System.DateTime));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var dienThoaiParameter = dienThoai != null ?
                new ObjectParameter("DienThoai", dienThoai) :
                new ObjectParameter("DienThoai", typeof(string));
    
            var ngayVaoLamParameter = ngayVaoLam.HasValue ?
                new ObjectParameter("NgayVaoLam", ngayVaoLam) :
                new ObjectParameter("NgayVaoLam", typeof(System.DateTime));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var iDTinhTrangLVParameter = iDTinhTrangLV.HasValue ?
                new ObjectParameter("IDTinhTrangLV", iDTinhTrangLV) :
                new ObjectParameter("IDTinhTrangLV", typeof(int));
    
            var iDViTriParameter = iDViTri.HasValue ?
                new ObjectParameter("IDViTri", iDViTri) :
                new ObjectParameter("IDViTri", typeof(int));
    
            var cMNDParameter = cMND != null ?
                new ObjectParameter("CMND", cMND) :
                new ObjectParameter("CMND", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVien_insert_API", maNVParameter, hotenParameter, ngaySinhParameter, diaChiParameter, dienThoaiParameter, ngayVaoLamParameter, iDPhongBanParameter, iDTinhTrangLVParameter, iDViTriParameter, cMNDParameter);
        }
    
        public virtual int NhanVien_update(Nullable<int> iDNV, string maNV, string hoTen, Nullable<System.DateTime> ngaySinh, string diaChi, string email, string dienThoai, Nullable<int> iDPhongBan, Nullable<int> phanXuongID, Nullable<int> chucVuID, Nullable<int> capBac, string imagePath)
        {
            var iDNVParameter = iDNV.HasValue ?
                new ObjectParameter("IDNV", iDNV) :
                new ObjectParameter("IDNV", typeof(int));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var ngaySinhParameter = ngaySinh.HasValue ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(System.DateTime));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var dienThoaiParameter = dienThoai != null ?
                new ObjectParameter("DienThoai", dienThoai) :
                new ObjectParameter("DienThoai", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var phanXuongIDParameter = phanXuongID.HasValue ?
                new ObjectParameter("PhanXuongID", phanXuongID) :
                new ObjectParameter("PhanXuongID", typeof(int));
    
            var chucVuIDParameter = chucVuID.HasValue ?
                new ObjectParameter("ChucVuID", chucVuID) :
                new ObjectParameter("ChucVuID", typeof(int));
    
            var capBacParameter = capBac.HasValue ?
                new ObjectParameter("CapBac", capBac) :
                new ObjectParameter("CapBac", typeof(int));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVien_update", iDNVParameter, maNVParameter, hoTenParameter, ngaySinhParameter, diaChiParameter, emailParameter, dienThoaiParameter, iDPhongBanParameter, phanXuongIDParameter, chucVuIDParameter, capBacParameter, imagePathParameter);
        }
    
        public virtual int NhanVien_update_API(string maNV, string hoten, Nullable<System.DateTime> ngaySinh, string diaChi, string dienThoai, Nullable<System.DateTime> ngayVaoLam, Nullable<int> iDPhongBan, Nullable<int> iDTinhTrangLV, Nullable<int> iDViTri, string cMND)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hotenParameter = hoten != null ?
                new ObjectParameter("Hoten", hoten) :
                new ObjectParameter("Hoten", typeof(string));
    
            var ngaySinhParameter = ngaySinh.HasValue ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(System.DateTime));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var dienThoaiParameter = dienThoai != null ?
                new ObjectParameter("DienThoai", dienThoai) :
                new ObjectParameter("DienThoai", typeof(string));
    
            var ngayVaoLamParameter = ngayVaoLam.HasValue ?
                new ObjectParameter("NgayVaoLam", ngayVaoLam) :
                new ObjectParameter("NgayVaoLam", typeof(System.DateTime));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var iDTinhTrangLVParameter = iDTinhTrangLV.HasValue ?
                new ObjectParameter("IDTinhTrangLV", iDTinhTrangLV) :
                new ObjectParameter("IDTinhTrangLV", typeof(int));
    
            var iDViTriParameter = iDViTri.HasValue ?
                new ObjectParameter("IDViTri", iDViTri) :
                new ObjectParameter("IDViTri", typeof(int));
    
            var cMNDParameter = cMND != null ?
                new ObjectParameter("CMND", cMND) :
                new ObjectParameter("CMND", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVien_update_API", maNVParameter, hotenParameter, ngaySinhParameter, diaChiParameter, dienThoaiParameter, ngayVaoLamParameter, iDPhongBanParameter, iDTinhTrangLVParameter, iDViTriParameter, cMNDParameter);
        }
    
        public virtual int NhanVien_update_Excel(string maNV, Nullable<int> iDToLV, Nullable<int> iDCa, Nullable<int> iDPhanXuong, string maViTri, Nullable<int> iDNhomLV, Nullable<int> iDLoai)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var iDToLVParameter = iDToLV.HasValue ?
                new ObjectParameter("IDToLV", iDToLV) :
                new ObjectParameter("IDToLV", typeof(int));
    
            var iDCaParameter = iDCa.HasValue ?
                new ObjectParameter("IDCa", iDCa) :
                new ObjectParameter("IDCa", typeof(int));
    
            var iDPhanXuongParameter = iDPhanXuong.HasValue ?
                new ObjectParameter("IDPhanXuong", iDPhanXuong) :
                new ObjectParameter("IDPhanXuong", typeof(int));
    
            var maViTriParameter = maViTri != null ?
                new ObjectParameter("MaViTri", maViTri) :
                new ObjectParameter("MaViTri", typeof(string));
    
            var iDNhomLVParameter = iDNhomLV.HasValue ?
                new ObjectParameter("IDNhomLV", iDNhomLV) :
                new ObjectParameter("IDNhomLV", typeof(int));
    
            var iDLoaiParameter = iDLoai.HasValue ?
                new ObjectParameter("IDLoai", iDLoai) :
                new ObjectParameter("IDLoai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVien_update_Excel", maNVParameter, iDToLVParameter, iDCaParameter, iDPhanXuongParameter, maViTriParameter, iDNhomLVParameter, iDLoaiParameter);
        }
    
        public virtual int NhanVien_update_TT(string maNV, string imagePath, Nullable<int> tT_BGD)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var tT_BGDParameter = tT_BGD.HasValue ?
                new ObjectParameter("TT_BGD", tT_BGD) :
                new ObjectParameter("TT_BGD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVien_update_TT", maNVParameter, imagePathParameter, tT_BGDParameter);
        }
    
        public virtual ObjectResult<NhanVienAPI_select_Result> NhanVienAPI_select(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NhanVienAPI_select_Result>("NhanVienAPI_select", searchParameter);
        }
    
        public virtual int NhanVienPVSX_delete(Nullable<int> iDNV)
        {
            var iDNVParameter = iDNV.HasValue ?
                new ObjectParameter("IDNV", iDNV) :
                new ObjectParameter("IDNV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVienPVSX_delete", iDNVParameter);
        }
    
        public virtual int NhanVienPVSX_insert(string maNV, string hoten, Nullable<int> iDPhongBan, Nullable<int> iDViTri, string imagePath, Nullable<int> tT_BGD)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hotenParameter = hoten != null ?
                new ObjectParameter("Hoten", hoten) :
                new ObjectParameter("Hoten", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var iDViTriParameter = iDViTri.HasValue ?
                new ObjectParameter("IDViTri", iDViTri) :
                new ObjectParameter("IDViTri", typeof(int));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var tT_BGDParameter = tT_BGD.HasValue ?
                new ObjectParameter("TT_BGD", tT_BGD) :
                new ObjectParameter("TT_BGD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVienPVSX_insert", maNVParameter, hotenParameter, iDPhongBanParameter, iDViTriParameter, imagePathParameter, tT_BGDParameter);
        }
    
        public virtual int NhanVienPVSX_update(Nullable<int> iDNV, string maNV, string hoten, Nullable<int> iDPhongBan, string imagePath, Nullable<int> tT_BGD)
        {
            var iDNVParameter = iDNV.HasValue ?
                new ObjectParameter("IDNV", iDNV) :
                new ObjectParameter("IDNV", typeof(int));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var hotenParameter = hoten != null ?
                new ObjectParameter("Hoten", hoten) :
                new ObjectParameter("Hoten", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var tT_BGDParameter = tT_BGD.HasValue ?
                new ObjectParameter("TT_BGD", tT_BGD) :
                new ObjectParameter("TT_BGD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVienPVSX_update", iDNVParameter, maNVParameter, hotenParameter, iDPhongBanParameter, imagePathParameter, tT_BGDParameter);
        }
    
        public virtual int Nhom_delete(Nullable<int> iDNhom)
        {
            var iDNhomParameter = iDNhom.HasValue ?
                new ObjectParameter("IDNhom", iDNhom) :
                new ObjectParameter("IDNhom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Nhom_delete", iDNhomParameter);
        }
    
        public virtual int Nhom_insert(string tenNhom, Nullable<int> iDPhongBan, Nullable<int> tPTDB, Nullable<int> pTDB, Nullable<int> tPKipDB, Nullable<int> kTVDB, Nullable<int> nVDB, Nullable<int> kTVCa, Nullable<int> nVCa, Nullable<int> tTTPDB)
        {
            var tenNhomParameter = tenNhom != null ?
                new ObjectParameter("TenNhom", tenNhom) :
                new ObjectParameter("TenNhom", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tPTDBParameter = tPTDB.HasValue ?
                new ObjectParameter("TPTDB", tPTDB) :
                new ObjectParameter("TPTDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipDBParameter = tPKipDB.HasValue ?
                new ObjectParameter("TPKipDB", tPKipDB) :
                new ObjectParameter("TPKipDB", typeof(int));
    
            var kTVDBParameter = kTVDB.HasValue ?
                new ObjectParameter("KTVDB", kTVDB) :
                new ObjectParameter("KTVDB", typeof(int));
    
            var nVDBParameter = nVDB.HasValue ?
                new ObjectParameter("NVDB", nVDB) :
                new ObjectParameter("NVDB", typeof(int));
    
            var kTVCaParameter = kTVCa.HasValue ?
                new ObjectParameter("KTVCa", kTVCa) :
                new ObjectParameter("KTVCa", typeof(int));
    
            var nVCaParameter = nVCa.HasValue ?
                new ObjectParameter("NVCa", nVCa) :
                new ObjectParameter("NVCa", typeof(int));
    
            var tTTPDBParameter = tTTPDB.HasValue ?
                new ObjectParameter("TTTPDB", tTTPDB) :
                new ObjectParameter("TTTPDB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Nhom_insert", tenNhomParameter, iDPhongBanParameter, tPTDBParameter, pTDBParameter, tPKipDBParameter, kTVDBParameter, nVDBParameter, kTVCaParameter, nVCaParameter, tTTPDBParameter);
        }
    
        public virtual int Nhom_insert_Excel(string tenNhom, Nullable<int> iDPhongBan, Nullable<int> tPTDB, Nullable<int> pTDB, Nullable<int> tPKipDB, Nullable<int> kTVDB, Nullable<int> nVDB, Nullable<int> kTVCa, Nullable<int> nVCa, Nullable<int> tTTPDB, Nullable<int> iDNhomPT)
        {
            var tenNhomParameter = tenNhom != null ?
                new ObjectParameter("TenNhom", tenNhom) :
                new ObjectParameter("TenNhom", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tPTDBParameter = tPTDB.HasValue ?
                new ObjectParameter("TPTDB", tPTDB) :
                new ObjectParameter("TPTDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipDBParameter = tPKipDB.HasValue ?
                new ObjectParameter("TPKipDB", tPKipDB) :
                new ObjectParameter("TPKipDB", typeof(int));
    
            var kTVDBParameter = kTVDB.HasValue ?
                new ObjectParameter("KTVDB", kTVDB) :
                new ObjectParameter("KTVDB", typeof(int));
    
            var nVDBParameter = nVDB.HasValue ?
                new ObjectParameter("NVDB", nVDB) :
                new ObjectParameter("NVDB", typeof(int));
    
            var kTVCaParameter = kTVCa.HasValue ?
                new ObjectParameter("KTVCa", kTVCa) :
                new ObjectParameter("KTVCa", typeof(int));
    
            var nVCaParameter = nVCa.HasValue ?
                new ObjectParameter("NVCa", nVCa) :
                new ObjectParameter("NVCa", typeof(int));
    
            var tTTPDBParameter = tTTPDB.HasValue ?
                new ObjectParameter("TTTPDB", tTTPDB) :
                new ObjectParameter("TTTPDB", typeof(int));
    
            var iDNhomPTParameter = iDNhomPT.HasValue ?
                new ObjectParameter("IDNhomPT", iDNhomPT) :
                new ObjectParameter("IDNhomPT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Nhom_insert_Excel", tenNhomParameter, iDPhongBanParameter, tPTDBParameter, pTDBParameter, tPKipDBParameter, kTVDBParameter, nVDBParameter, kTVCaParameter, nVCaParameter, tTTPDBParameter, iDNhomPTParameter);
        }
    
        public virtual int Nhom_update(Nullable<int> iDNhom, string tenNhom, Nullable<int> iDPhongBan, Nullable<int> tPTDB, Nullable<int> pTDB, Nullable<int> tPKipDB, Nullable<int> kTVDB, Nullable<int> nVDB, Nullable<int> kTVCa, Nullable<int> nVCa, Nullable<int> tTTPDB)
        {
            var iDNhomParameter = iDNhom.HasValue ?
                new ObjectParameter("IDNhom", iDNhom) :
                new ObjectParameter("IDNhom", typeof(int));
    
            var tenNhomParameter = tenNhom != null ?
                new ObjectParameter("TenNhom", tenNhom) :
                new ObjectParameter("TenNhom", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tPTDBParameter = tPTDB.HasValue ?
                new ObjectParameter("TPTDB", tPTDB) :
                new ObjectParameter("TPTDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipDBParameter = tPKipDB.HasValue ?
                new ObjectParameter("TPKipDB", tPKipDB) :
                new ObjectParameter("TPKipDB", typeof(int));
    
            var kTVDBParameter = kTVDB.HasValue ?
                new ObjectParameter("KTVDB", kTVDB) :
                new ObjectParameter("KTVDB", typeof(int));
    
            var nVDBParameter = nVDB.HasValue ?
                new ObjectParameter("NVDB", nVDB) :
                new ObjectParameter("NVDB", typeof(int));
    
            var kTVCaParameter = kTVCa.HasValue ?
                new ObjectParameter("KTVCa", kTVCa) :
                new ObjectParameter("KTVCa", typeof(int));
    
            var nVCaParameter = nVCa.HasValue ?
                new ObjectParameter("NVCa", nVCa) :
                new ObjectParameter("NVCa", typeof(int));
    
            var tTTPDBParameter = tTTPDB.HasValue ?
                new ObjectParameter("TTTPDB", tTTPDB) :
                new ObjectParameter("TTTPDB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Nhom_update", iDNhomParameter, tenNhomParameter, iDPhongBanParameter, tPTDBParameter, pTDBParameter, tPKipDBParameter, kTVDBParameter, nVDBParameter, kTVCaParameter, nVCaParameter, tTTPDBParameter);
        }
    
        public virtual int Nhom_update_Excel(Nullable<int> iDNhom, string tenNhom, Nullable<int> iDPhongBan, Nullable<int> tPTDB, Nullable<int> pTDB, Nullable<int> tPKipDB, Nullable<int> kTVDB, Nullable<int> nVDB, Nullable<int> kTVCa, Nullable<int> nVCa, Nullable<int> tTTPDB, Nullable<int> iDNhomPT)
        {
            var iDNhomParameter = iDNhom.HasValue ?
                new ObjectParameter("IDNhom", iDNhom) :
                new ObjectParameter("IDNhom", typeof(int));
    
            var tenNhomParameter = tenNhom != null ?
                new ObjectParameter("TenNhom", tenNhom) :
                new ObjectParameter("TenNhom", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tPTDBParameter = tPTDB.HasValue ?
                new ObjectParameter("TPTDB", tPTDB) :
                new ObjectParameter("TPTDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipDBParameter = tPKipDB.HasValue ?
                new ObjectParameter("TPKipDB", tPKipDB) :
                new ObjectParameter("TPKipDB", typeof(int));
    
            var kTVDBParameter = kTVDB.HasValue ?
                new ObjectParameter("KTVDB", kTVDB) :
                new ObjectParameter("KTVDB", typeof(int));
    
            var nVDBParameter = nVDB.HasValue ?
                new ObjectParameter("NVDB", nVDB) :
                new ObjectParameter("NVDB", typeof(int));
    
            var kTVCaParameter = kTVCa.HasValue ?
                new ObjectParameter("KTVCa", kTVCa) :
                new ObjectParameter("KTVCa", typeof(int));
    
            var nVCaParameter = nVCa.HasValue ?
                new ObjectParameter("NVCa", nVCa) :
                new ObjectParameter("NVCa", typeof(int));
    
            var tTTPDBParameter = tTTPDB.HasValue ?
                new ObjectParameter("TTTPDB", tTTPDB) :
                new ObjectParameter("TTTPDB", typeof(int));
    
            var iDNhomPTParameter = iDNhomPT.HasValue ?
                new ObjectParameter("IDNhomPT", iDNhomPT) :
                new ObjectParameter("IDNhomPT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Nhom_update_Excel", iDNhomParameter, tenNhomParameter, iDPhongBanParameter, tPTDBParameter, pTDBParameter, tPKipDBParameter, kTVDBParameter, nVDBParameter, kTVCaParameter, nVCaParameter, tTTPDBParameter, iDNhomPTParameter);
        }
    
        public virtual int PhanXuong_delete(Nullable<int> iDPhanXuong)
        {
            var iDPhanXuongParameter = iDPhanXuong.HasValue ?
                new ObjectParameter("IDPhanXuong", iDPhanXuong) :
                new ObjectParameter("IDPhanXuong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhanXuong_delete", iDPhanXuongParameter);
        }
    
        public virtual int PhanXuong_insert(string tenPhanXuong, Nullable<int> iDPhongBan, Nullable<int> pTDB, Nullable<int> tPDB, Nullable<int> kTVDB, Nullable<int> nVDB, Nullable<int> pTTT, Nullable<int> tPTT, Nullable<int> kTVTT, Nullable<int> nVTT)
        {
            var tenPhanXuongParameter = tenPhanXuong != null ?
                new ObjectParameter("TenPhanXuong", tenPhanXuong) :
                new ObjectParameter("TenPhanXuong", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPDBParameter = tPDB.HasValue ?
                new ObjectParameter("TPDB", tPDB) :
                new ObjectParameter("TPDB", typeof(int));
    
            var kTVDBParameter = kTVDB.HasValue ?
                new ObjectParameter("KTVDB", kTVDB) :
                new ObjectParameter("KTVDB", typeof(int));
    
            var nVDBParameter = nVDB.HasValue ?
                new ObjectParameter("NVDB", nVDB) :
                new ObjectParameter("NVDB", typeof(int));
    
            var pTTTParameter = pTTT.HasValue ?
                new ObjectParameter("PTTT", pTTT) :
                new ObjectParameter("PTTT", typeof(int));
    
            var tPTTParameter = tPTT.HasValue ?
                new ObjectParameter("TPTT", tPTT) :
                new ObjectParameter("TPTT", typeof(int));
    
            var kTVTTParameter = kTVTT.HasValue ?
                new ObjectParameter("KTVTT", kTVTT) :
                new ObjectParameter("KTVTT", typeof(int));
    
            var nVTTParameter = nVTT.HasValue ?
                new ObjectParameter("NVTT", nVTT) :
                new ObjectParameter("NVTT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhanXuong_insert", tenPhanXuongParameter, iDPhongBanParameter, pTDBParameter, tPDBParameter, kTVDBParameter, nVDBParameter, pTTTParameter, tPTTParameter, kTVTTParameter, nVTTParameter);
        }
    
        public virtual int PhanXuong_insert_Excel(string tenPhanXuong, Nullable<int> iDPhongBan, Nullable<int> tPDB, Nullable<int> pTDB, Nullable<int> tPKip, Nullable<int> kTVDB, Nullable<int> nVDB, Nullable<int> nVHCDB, Nullable<int> tTTP)
        {
            var tenPhanXuongParameter = tenPhanXuong != null ?
                new ObjectParameter("TenPhanXuong", tenPhanXuong) :
                new ObjectParameter("TenPhanXuong", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tPDBParameter = tPDB.HasValue ?
                new ObjectParameter("TPDB", tPDB) :
                new ObjectParameter("TPDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipParameter = tPKip.HasValue ?
                new ObjectParameter("TPKip", tPKip) :
                new ObjectParameter("TPKip", typeof(int));
    
            var kTVDBParameter = kTVDB.HasValue ?
                new ObjectParameter("KTVDB", kTVDB) :
                new ObjectParameter("KTVDB", typeof(int));
    
            var nVDBParameter = nVDB.HasValue ?
                new ObjectParameter("NVDB", nVDB) :
                new ObjectParameter("NVDB", typeof(int));
    
            var nVHCDBParameter = nVHCDB.HasValue ?
                new ObjectParameter("NVHCDB", nVHCDB) :
                new ObjectParameter("NVHCDB", typeof(int));
    
            var tTTPParameter = tTTP.HasValue ?
                new ObjectParameter("TTTP", tTTP) :
                new ObjectParameter("TTTP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhanXuong_insert_Excel", tenPhanXuongParameter, iDPhongBanParameter, tPDBParameter, pTDBParameter, tPKipParameter, kTVDBParameter, nVDBParameter, nVHCDBParameter, tTTPParameter);
        }
    
        public virtual int PhanXuong_insert_name(string tenPhanXuong, Nullable<int> iDPhongBan)
        {
            var tenPhanXuongParameter = tenPhanXuong != null ?
                new ObjectParameter("TenPhanXuong", tenPhanXuong) :
                new ObjectParameter("TenPhanXuong", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhanXuong_insert_name", tenPhanXuongParameter, iDPhongBanParameter);
        }
    
        public virtual int PhanXuong_update(Nullable<int> iDPhanXuong, string tenPhanXuong, Nullable<int> phongBanID, Nullable<int> pTDB, Nullable<int> tPDB, Nullable<int> kTVDB, Nullable<int> nVDB, Nullable<int> pTTT, Nullable<int> tPTT, Nullable<int> kTVTT, Nullable<int> nVTT)
        {
            var iDPhanXuongParameter = iDPhanXuong.HasValue ?
                new ObjectParameter("IDPhanXuong", iDPhanXuong) :
                new ObjectParameter("IDPhanXuong", typeof(int));
    
            var tenPhanXuongParameter = tenPhanXuong != null ?
                new ObjectParameter("TenPhanXuong", tenPhanXuong) :
                new ObjectParameter("TenPhanXuong", typeof(string));
    
            var phongBanIDParameter = phongBanID.HasValue ?
                new ObjectParameter("PhongBanID", phongBanID) :
                new ObjectParameter("PhongBanID", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPDBParameter = tPDB.HasValue ?
                new ObjectParameter("TPDB", tPDB) :
                new ObjectParameter("TPDB", typeof(int));
    
            var kTVDBParameter = kTVDB.HasValue ?
                new ObjectParameter("KTVDB", kTVDB) :
                new ObjectParameter("KTVDB", typeof(int));
    
            var nVDBParameter = nVDB.HasValue ?
                new ObjectParameter("NVDB", nVDB) :
                new ObjectParameter("NVDB", typeof(int));
    
            var pTTTParameter = pTTT.HasValue ?
                new ObjectParameter("PTTT", pTTT) :
                new ObjectParameter("PTTT", typeof(int));
    
            var tPTTParameter = tPTT.HasValue ?
                new ObjectParameter("TPTT", tPTT) :
                new ObjectParameter("TPTT", typeof(int));
    
            var kTVTTParameter = kTVTT.HasValue ?
                new ObjectParameter("KTVTT", kTVTT) :
                new ObjectParameter("KTVTT", typeof(int));
    
            var nVTTParameter = nVTT.HasValue ?
                new ObjectParameter("NVTT", nVTT) :
                new ObjectParameter("NVTT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhanXuong_update", iDPhanXuongParameter, tenPhanXuongParameter, phongBanIDParameter, pTDBParameter, tPDBParameter, kTVDBParameter, nVDBParameter, pTTTParameter, tPTTParameter, kTVTTParameter, nVTTParameter);
        }
    
        public virtual int PhanXuong_update_Excel(Nullable<int> iDPhanXuong, string tenPhanXuong, Nullable<int> iDPhongBan, Nullable<int> tPDB, Nullable<int> pTDB, Nullable<int> tPKip, Nullable<int> kTVDB, Nullable<int> nVDB, Nullable<int> nVHCDB, Nullable<int> tTTP)
        {
            var iDPhanXuongParameter = iDPhanXuong.HasValue ?
                new ObjectParameter("IDPhanXuong", iDPhanXuong) :
                new ObjectParameter("IDPhanXuong", typeof(int));
    
            var tenPhanXuongParameter = tenPhanXuong != null ?
                new ObjectParameter("TenPhanXuong", tenPhanXuong) :
                new ObjectParameter("TenPhanXuong", typeof(string));
    
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tPDBParameter = tPDB.HasValue ?
                new ObjectParameter("TPDB", tPDB) :
                new ObjectParameter("TPDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipParameter = tPKip.HasValue ?
                new ObjectParameter("TPKip", tPKip) :
                new ObjectParameter("TPKip", typeof(int));
    
            var kTVDBParameter = kTVDB.HasValue ?
                new ObjectParameter("KTVDB", kTVDB) :
                new ObjectParameter("KTVDB", typeof(int));
    
            var nVDBParameter = nVDB.HasValue ?
                new ObjectParameter("NVDB", nVDB) :
                new ObjectParameter("NVDB", typeof(int));
    
            var nVHCDBParameter = nVHCDB.HasValue ?
                new ObjectParameter("NVHCDB", nVHCDB) :
                new ObjectParameter("NVHCDB", typeof(int));
    
            var tTTPParameter = tTTP.HasValue ?
                new ObjectParameter("TTTP", tTTP) :
                new ObjectParameter("TTTP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhanXuong_update_Excel", iDPhanXuongParameter, tenPhanXuongParameter, iDPhongBanParameter, tPDBParameter, pTDBParameter, tPKipParameter, kTVDBParameter, nVDBParameter, nVHCDBParameter, tTTPParameter);
        }
    
        public virtual int PhongBan_delete(Nullable<int> iDPhongBan)
        {
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhongBan_delete", iDPhongBanParameter);
        }
    
        public virtual int PhongBan_insert(string tenPhongBan, Nullable<int> iDNhom, string imagePath, Nullable<int> tPDB, Nullable<int> qDTPTDB, Nullable<int> pTDB, Nullable<int> tPKipDB, Nullable<int> kTVHCDB, Nullable<int> kTVCaDB, Nullable<int> tTTPHCDB, Nullable<int> tTTPCaDB, Nullable<int> nVHCDB, Nullable<int> nVCaDB)
        {
            var tenPhongBanParameter = tenPhongBan != null ?
                new ObjectParameter("TenPhongBan", tenPhongBan) :
                new ObjectParameter("TenPhongBan", typeof(string));
    
            var iDNhomParameter = iDNhom.HasValue ?
                new ObjectParameter("IDNhom", iDNhom) :
                new ObjectParameter("IDNhom", typeof(int));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var tPDBParameter = tPDB.HasValue ?
                new ObjectParameter("TPDB", tPDB) :
                new ObjectParameter("TPDB", typeof(int));
    
            var qDTPTDBParameter = qDTPTDB.HasValue ?
                new ObjectParameter("QDTPTDB", qDTPTDB) :
                new ObjectParameter("QDTPTDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipDBParameter = tPKipDB.HasValue ?
                new ObjectParameter("TPKipDB", tPKipDB) :
                new ObjectParameter("TPKipDB", typeof(int));
    
            var kTVHCDBParameter = kTVHCDB.HasValue ?
                new ObjectParameter("KTVHCDB", kTVHCDB) :
                new ObjectParameter("KTVHCDB", typeof(int));
    
            var kTVCaDBParameter = kTVCaDB.HasValue ?
                new ObjectParameter("KTVCaDB", kTVCaDB) :
                new ObjectParameter("KTVCaDB", typeof(int));
    
            var tTTPHCDBParameter = tTTPHCDB.HasValue ?
                new ObjectParameter("TTTPHCDB", tTTPHCDB) :
                new ObjectParameter("TTTPHCDB", typeof(int));
    
            var tTTPCaDBParameter = tTTPCaDB.HasValue ?
                new ObjectParameter("TTTPCaDB", tTTPCaDB) :
                new ObjectParameter("TTTPCaDB", typeof(int));
    
            var nVHCDBParameter = nVHCDB.HasValue ?
                new ObjectParameter("NVHCDB", nVHCDB) :
                new ObjectParameter("NVHCDB", typeof(int));
    
            var nVCaDBParameter = nVCaDB.HasValue ?
                new ObjectParameter("NVCaDB", nVCaDB) :
                new ObjectParameter("NVCaDB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhongBan_insert", tenPhongBanParameter, iDNhomParameter, imagePathParameter, tPDBParameter, qDTPTDBParameter, pTDBParameter, tPKipDBParameter, kTVHCDBParameter, kTVCaDBParameter, tTTPHCDBParameter, tTTPCaDBParameter, nVHCDBParameter, nVCaDBParameter);
        }
    
        public virtual int PhongBan_insert_API(string tenPhongBan)
        {
            var tenPhongBanParameter = tenPhongBan != null ?
                new ObjectParameter("TenPhongBan", tenPhongBan) :
                new ObjectParameter("TenPhongBan", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhongBan_insert_API", tenPhongBanParameter);
        }
    
        public virtual int PhongBan_insert_Excel(string tenPhongBan, Nullable<int> tPDB, Nullable<int> qDTPTDB, Nullable<int> pTDB, Nullable<int> tPKipDB, Nullable<int> kTVHCDB, Nullable<int> kTVCaDB, Nullable<int> tTTPHCDB, Nullable<int> tTTPCaDB, Nullable<int> nVHCDB, Nullable<int> nVCaDB)
        {
            var tenPhongBanParameter = tenPhongBan != null ?
                new ObjectParameter("TenPhongBan", tenPhongBan) :
                new ObjectParameter("TenPhongBan", typeof(string));
    
            var tPDBParameter = tPDB.HasValue ?
                new ObjectParameter("TPDB", tPDB) :
                new ObjectParameter("TPDB", typeof(int));
    
            var qDTPTDBParameter = qDTPTDB.HasValue ?
                new ObjectParameter("QDTPTDB", qDTPTDB) :
                new ObjectParameter("QDTPTDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipDBParameter = tPKipDB.HasValue ?
                new ObjectParameter("TPKipDB", tPKipDB) :
                new ObjectParameter("TPKipDB", typeof(int));
    
            var kTVHCDBParameter = kTVHCDB.HasValue ?
                new ObjectParameter("KTVHCDB", kTVHCDB) :
                new ObjectParameter("KTVHCDB", typeof(int));
    
            var kTVCaDBParameter = kTVCaDB.HasValue ?
                new ObjectParameter("KTVCaDB", kTVCaDB) :
                new ObjectParameter("KTVCaDB", typeof(int));
    
            var tTTPHCDBParameter = tTTPHCDB.HasValue ?
                new ObjectParameter("TTTPHCDB", tTTPHCDB) :
                new ObjectParameter("TTTPHCDB", typeof(int));
    
            var tTTPCaDBParameter = tTTPCaDB.HasValue ?
                new ObjectParameter("TTTPCaDB", tTTPCaDB) :
                new ObjectParameter("TTTPCaDB", typeof(int));
    
            var nVHCDBParameter = nVHCDB.HasValue ?
                new ObjectParameter("NVHCDB", nVHCDB) :
                new ObjectParameter("NVHCDB", typeof(int));
    
            var nVCaDBParameter = nVCaDB.HasValue ?
                new ObjectParameter("NVCaDB", nVCaDB) :
                new ObjectParameter("NVCaDB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhongBan_insert_Excel", tenPhongBanParameter, tPDBParameter, qDTPTDBParameter, pTDBParameter, tPKipDBParameter, kTVHCDBParameter, kTVCaDBParameter, tTTPHCDBParameter, tTTPCaDBParameter, nVHCDBParameter, nVCaDBParameter);
        }
    
        public virtual int PhongBan_update(Nullable<int> iDPhongBan, string tenPhongBan, Nullable<int> iDNhom, string imagePath, Nullable<int> tPDB, Nullable<int> qDTPTDB, Nullable<int> pTDB, Nullable<int> tPKipDB, Nullable<int> kTVHCDB, Nullable<int> kTVCaDB, Nullable<int> tTTPHCDB, Nullable<int> tTTPCaDB, Nullable<int> nVHCDB, Nullable<int> nVCaDB)
        {
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tenPhongBanParameter = tenPhongBan != null ?
                new ObjectParameter("TenPhongBan", tenPhongBan) :
                new ObjectParameter("TenPhongBan", typeof(string));
    
            var iDNhomParameter = iDNhom.HasValue ?
                new ObjectParameter("IDNhom", iDNhom) :
                new ObjectParameter("IDNhom", typeof(int));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var tPDBParameter = tPDB.HasValue ?
                new ObjectParameter("TPDB", tPDB) :
                new ObjectParameter("TPDB", typeof(int));
    
            var qDTPTDBParameter = qDTPTDB.HasValue ?
                new ObjectParameter("QDTPTDB", qDTPTDB) :
                new ObjectParameter("QDTPTDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipDBParameter = tPKipDB.HasValue ?
                new ObjectParameter("TPKipDB", tPKipDB) :
                new ObjectParameter("TPKipDB", typeof(int));
    
            var kTVHCDBParameter = kTVHCDB.HasValue ?
                new ObjectParameter("KTVHCDB", kTVHCDB) :
                new ObjectParameter("KTVHCDB", typeof(int));
    
            var kTVCaDBParameter = kTVCaDB.HasValue ?
                new ObjectParameter("KTVCaDB", kTVCaDB) :
                new ObjectParameter("KTVCaDB", typeof(int));
    
            var tTTPHCDBParameter = tTTPHCDB.HasValue ?
                new ObjectParameter("TTTPHCDB", tTTPHCDB) :
                new ObjectParameter("TTTPHCDB", typeof(int));
    
            var tTTPCaDBParameter = tTTPCaDB.HasValue ?
                new ObjectParameter("TTTPCaDB", tTTPCaDB) :
                new ObjectParameter("TTTPCaDB", typeof(int));
    
            var nVHCDBParameter = nVHCDB.HasValue ?
                new ObjectParameter("NVHCDB", nVHCDB) :
                new ObjectParameter("NVHCDB", typeof(int));
    
            var nVCaDBParameter = nVCaDB.HasValue ?
                new ObjectParameter("NVCaDB", nVCaDB) :
                new ObjectParameter("NVCaDB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhongBan_update", iDPhongBanParameter, tenPhongBanParameter, iDNhomParameter, imagePathParameter, tPDBParameter, qDTPTDBParameter, pTDBParameter, tPKipDBParameter, kTVHCDBParameter, kTVCaDBParameter, tTTPHCDBParameter, tTTPCaDBParameter, nVHCDBParameter, nVCaDBParameter);
        }
    
        public virtual int PhongBan_update_Excel(Nullable<int> iDPhongBan, string tenPhongBan, Nullable<int> tPDB, Nullable<int> qDTPTDB, Nullable<int> pTDB, Nullable<int> tPKipDB, Nullable<int> kTVHCDB, Nullable<int> kTVCaDB, Nullable<int> tTTPHCDB, Nullable<int> tTTPCaDB, Nullable<int> nVHCDB, Nullable<int> nVCaDB)
        {
            var iDPhongBanParameter = iDPhongBan.HasValue ?
                new ObjectParameter("IDPhongBan", iDPhongBan) :
                new ObjectParameter("IDPhongBan", typeof(int));
    
            var tenPhongBanParameter = tenPhongBan != null ?
                new ObjectParameter("TenPhongBan", tenPhongBan) :
                new ObjectParameter("TenPhongBan", typeof(string));
    
            var tPDBParameter = tPDB.HasValue ?
                new ObjectParameter("TPDB", tPDB) :
                new ObjectParameter("TPDB", typeof(int));
    
            var qDTPTDBParameter = qDTPTDB.HasValue ?
                new ObjectParameter("QDTPTDB", qDTPTDB) :
                new ObjectParameter("QDTPTDB", typeof(int));
    
            var pTDBParameter = pTDB.HasValue ?
                new ObjectParameter("PTDB", pTDB) :
                new ObjectParameter("PTDB", typeof(int));
    
            var tPKipDBParameter = tPKipDB.HasValue ?
                new ObjectParameter("TPKipDB", tPKipDB) :
                new ObjectParameter("TPKipDB", typeof(int));
    
            var kTVHCDBParameter = kTVHCDB.HasValue ?
                new ObjectParameter("KTVHCDB", kTVHCDB) :
                new ObjectParameter("KTVHCDB", typeof(int));
    
            var kTVCaDBParameter = kTVCaDB.HasValue ?
                new ObjectParameter("KTVCaDB", kTVCaDB) :
                new ObjectParameter("KTVCaDB", typeof(int));
    
            var tTTPHCDBParameter = tTTPHCDB.HasValue ?
                new ObjectParameter("TTTPHCDB", tTTPHCDB) :
                new ObjectParameter("TTTPHCDB", typeof(int));
    
            var tTTPCaDBParameter = tTTPCaDB.HasValue ?
                new ObjectParameter("TTTPCaDB", tTTPCaDB) :
                new ObjectParameter("TTTPCaDB", typeof(int));
    
            var nVHCDBParameter = nVHCDB.HasValue ?
                new ObjectParameter("NVHCDB", nVHCDB) :
                new ObjectParameter("NVHCDB", typeof(int));
    
            var nVCaDBParameter = nVCaDB.HasValue ?
                new ObjectParameter("NVCaDB", nVCaDB) :
                new ObjectParameter("NVCaDB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PhongBan_update_Excel", iDPhongBanParameter, tenPhongBanParameter, tPDBParameter, qDTPTDBParameter, pTDBParameter, tPKipDBParameter, kTVHCDBParameter, kTVCaDBParameter, tTTPHCDBParameter, tTTPCaDBParameter, nVHCDBParameter, nVCaDBParameter);
        }
    
        public virtual int ToLV_delete(Nullable<int> iDTo)
        {
            var iDToParameter = iDTo.HasValue ?
                new ObjectParameter("IDTo", iDTo) :
                new ObjectParameter("IDTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ToLV_delete", iDToParameter);
        }
    
        public virtual int ToLV_insert(string tenTo, Nullable<int> phanXuongID, Nullable<int> phongBanID, Nullable<int> sLDB, Nullable<int> iDNhomPT)
        {
            var tenToParameter = tenTo != null ?
                new ObjectParameter("TenTo", tenTo) :
                new ObjectParameter("TenTo", typeof(string));
    
            var phanXuongIDParameter = phanXuongID.HasValue ?
                new ObjectParameter("PhanXuongID", phanXuongID) :
                new ObjectParameter("PhanXuongID", typeof(int));
    
            var phongBanIDParameter = phongBanID.HasValue ?
                new ObjectParameter("PhongBanID", phongBanID) :
                new ObjectParameter("PhongBanID", typeof(int));
    
            var sLDBParameter = sLDB.HasValue ?
                new ObjectParameter("SLDB", sLDB) :
                new ObjectParameter("SLDB", typeof(int));
    
            var iDNhomPTParameter = iDNhomPT.HasValue ?
                new ObjectParameter("IDNhomPT", iDNhomPT) :
                new ObjectParameter("IDNhomPT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ToLV_insert", tenToParameter, phanXuongIDParameter, phongBanIDParameter, sLDBParameter, iDNhomPTParameter);
        }
    
        public virtual int ToLV_update(string tenTo, Nullable<int> phanXuongID, Nullable<int> phongBanID, Nullable<int> sLDB, Nullable<int> iDNhomPT, Nullable<int> iDTo)
        {
            var tenToParameter = tenTo != null ?
                new ObjectParameter("TenTo", tenTo) :
                new ObjectParameter("TenTo", typeof(string));
    
            var phanXuongIDParameter = phanXuongID.HasValue ?
                new ObjectParameter("PhanXuongID", phanXuongID) :
                new ObjectParameter("PhanXuongID", typeof(int));
    
            var phongBanIDParameter = phongBanID.HasValue ?
                new ObjectParameter("PhongBanID", phongBanID) :
                new ObjectParameter("PhongBanID", typeof(int));
    
            var sLDBParameter = sLDB.HasValue ?
                new ObjectParameter("SLDB", sLDB) :
                new ObjectParameter("SLDB", typeof(int));
    
            var iDNhomPTParameter = iDNhomPT.HasValue ?
                new ObjectParameter("IDNhomPT", iDNhomPT) :
                new ObjectParameter("IDNhomPT", typeof(int));
    
            var iDToParameter = iDTo.HasValue ?
                new ObjectParameter("IDTo", iDTo) :
                new ObjectParameter("IDTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ToLV_update", tenToParameter, phanXuongIDParameter, phongBanIDParameter, sLDBParameter, iDNhomPTParameter, iDToParameter);
        }
    
        public virtual int ViTri_insert_API(string tenViTri)
        {
            var tenViTriParameter = tenViTri != null ?
                new ObjectParameter("TenViTri", tenViTri) :
                new ObjectParameter("TenViTri", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ViTri_insert_API", tenViTriParameter);
        }
    }
}
